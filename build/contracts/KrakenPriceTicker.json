{
  "contractName": "KrakenPriceTicker",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "priceETHXBT",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "NewOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "NewKrakenPriceTicker",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x606060405260008054600160a060020a03191673bb029d89efb9e7eda9c8baeb164cfbd021a6aa77179055620000637f11000000000000000000000000000000000000000000000000000000000000006401000000006200126c6200009c82021704565b6200007e6103e864010000000062001431620002c882021704565b620000966401000000006200039a620004bb82021704565b620012b3565b600054600160a060020a03161580620000d75750600054620000d590600160a060020a031664010000000062000e326200075882021704565b155b15620000f957620000f7600064010000000062000e366200075c82021704565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156200015c57600080fd5b6102c65a03f115156200016e57600080fd5b5050506040518051600154600160a060020a0390811691161490506200022d5760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515620001f157600080fd5b6102c65a03f115156200020357600080fd5b505050604051805160018054600160a060020a031916600160a060020a0392909216919091179055505b600154600160a060020a031663688dcfd7826040517c010000000000000000000000000000000000000000000000000000000063ffffffff84160281527fff000000000000000000000000000000000000000000000000000000000000009091166004820152602401600060405180830381600087803b1515620002b057600080fd5b6102c65a03f11515620002c257600080fd5b50505050565b600054600160a060020a031615806200030357506000546200030190600160a060020a031664010000000062000e326200075882021704565b155b15620003255762000323600064010000000062000e366200075c82021704565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156200038857600080fd5b6102c65a03f115156200039a57600080fd5b5050506040518051600154600160a060020a039081169116149050620004595760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156200041d57600080fd5b6102c65a03f115156200042f57600080fd5b505050604051805160018054600160a060020a031916600160a060020a0392909216919091179055505b600154600160a060020a031663ca6ad1e4826040517c010000000000000000000000000000000000000000000000000000000063ffffffff84160281526004810191909152602401600060405180830381600087803b1515620002b057600080fd5b6000806200050a60408051908101604052600381527f55524c00000000000000000000000000000000000000000000000000000000006020820152640100000000620008836200077c82021704565b915030600160a060020a031631821115620005d557600080516020620028ad83398151915282600060405160208101929092526040808301919091526060808352604b908301527f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6560808301527f6173652061646420736f6d652045544820746f20636f76657220666f7220746860a08301527f652071756572792066656500000000000000000000000000000000000000000060c083015260e0909101905180910390a162000754565b620006ab603c6040805190810160405280600381526020017f55524c000000000000000000000000000000000000000000000000000000000081525060806040519081016040908152604c82527f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707560208301527f626c69632f5469636b65723f706169723d455448584254292e726573756c742e908201527f58455448585842542e632e30000000000000000000000000000000000000000060608201526202bf2064010000000062000a9e62000a0182021704565b60008181526006602052604090819020805460ff19166001179055909150600080516020620028ad833981519152908390839051602081019290925260408083019190915260608083526035908301527f4f7261636c697a65207175657279207761732073656e742c207374616e64696e60808301527f6720627920666f722074686520616e737765722e2e000000000000000000000060a083015260c0909101905180910390a15b5050565b3b90565b60006200077664010000000062000e4662000e2282021704565b92915050565b60008054600160a060020a03161580620007b85750600054620007b690600160a060020a031664010000000062000e326200075882021704565b155b15620007da57620007d8600064010000000062000e366200075c82021704565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156200083d57600080fd5b6102c65a03f115156200084f57600080fd5b5050506040518051600154600160a060020a0390811691161490506200090e5760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515620008d257600080fd5b6102c65a03f11515620008e457600080fd5b505050604051805160018054600160a060020a031916600160a060020a0392909216919091179055505b600154600160a060020a031663524f3889836000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200099357808201518382015260200162000979565b50505050905090810190601f168015620009c15780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1515620009e057600080fd5b6102c65a03f11515620009f257600080fd5b50505060405180519392505050565b600080548190600160a060020a0316158062000a3f575060005462000a3d90600160a060020a031664010000000062000e326200075882021704565b155b1562000a615762000a5f600064010000000062000e366200075c82021704565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151562000ac457600080fd5b6102c65a03f1151562000ad657600080fd5b5050506040518051600154600160a060020a03908116911614905062000b955760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151562000b5957600080fd5b6102c65a03f1151562000b6b57600080fd5b505050604051805160018054600160a060020a031916600160a060020a0392909216919091179055505b600154600160a060020a0316632ef3accc86856000604051602001526040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101562000c2157808201518382015260200162000c07565b50505050905090810190601f16801562000c4f5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b151562000c6f57600080fd5b6102c65a03f1151562000c8157600080fd5b5050506040518051915050670de0b6b3a76400003a84020181111562000cab576000915062000e19565b600154600160a060020a031663c51be90f82888888886000604051602001526040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101562000d4457808201518382015260200162000d2a565b50505050905090810190601f16801562000d725780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101562000daa57808201518382015260200162000d90565b50505050905090810190601f16801562000dd85780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b151562000dfa57600080fd5b6125ee5a03f1151562000e0c57600080fd5b5050505060405180519250505b50949350505050565b60008062000e52731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed64010000000062000e326200075882021704565b111562000ed45760008054600160a060020a031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905562000ecb60408051908101604052600b81527f6574685f6d61696e6e65740000000000000000000000000000000000000000006020820152640100000000620011c56200120282021704565b506001620011ff565b600062000f0373c03a2615d5efaf5f49f60b7bb6583eaec212fdf164010000000062000e326200075882021704565b111562000f7c5760008054600160a060020a03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905562000ecb60408051908101604052600c81527f6574685f726f707374656e3300000000000000000000000000000000000000006020820152640100000000620011c56200120282021704565b600062000fab73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e64010000000062000e326200075882021704565b1115620010245760008054600160a060020a03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e17905562000ecb60408051908101604052600981527f6574685f6b6f76616e00000000000000000000000000000000000000000000006020820152640100000000620011c56200120282021704565b60006200105373146500cfd35b22e4a392fe0adc06de1a1368ed4864010000000062000e326200075882021704565b1115620010cc5760008054600160a060020a03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905562000ecb60408051908101604052600b81527f6574685f72696e6b6562790000000000000000000000000000000000000000006020820152640100000000620011c56200120282021704565b6000620010fb736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47564010000000062000e326200075882021704565b111562001131575060008054600160a060020a031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751790556001620011ff565b6000620011607320e12a1f859b3feae5fb2a0a32c18f5a65555bbf64010000000062000e326200075882021704565b111562001196575060008054600160a060020a0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1790556001620011ff565b6000620011c57351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa64010000000062000e326200075882021704565b1115620011fb575060008054600160a060020a0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1790556001620011ff565b5060005b90565b600281805162000754929160200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200125457805160ff191683800117855562001284565b8280016001018555821562001284579182015b828111156200128457825182559160200191906001019062001267565b506200129292915062001296565b5090565b620011ff91905b808211156200129257600081556001016200129d565b6115ea80620012c36000396000f3006060604052600436106100485763ffffffff60e060020a60003504166327dc297e811461004d57806338bbfa50146100a5578063a2e620451461013d578063e137ec2d14610145575b600080fd5b341561005857600080fd5b6100a3600480359060446024803590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506101cf95505050505050565b005b34156100b057600080fd5b6100a3600480359060446024803590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061020195505050505050565b6100a361039a565b341561015057600080fd5b610158610637565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561019457808201518382015260200161017c565b50505050905090810190601f1680156101c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fd828260006040518059106101e35750595b818152601f19601f83011681016020016040529050610201565b5050565b6102096106d5565b600160a060020a031633600160a060020a031614151561022857600080fd5b60008381526006602052604090205460ff16151561024557600080fd5b60058280516102589291602001906111d4565b507f0e1622293ecfe24e2c6a74cb531964b5133ac40879dc71c54feed200bf60cac360058483604051602081018390526060808252845460026101006001831615026000190190911604908201819052819060408201906080830190879080156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b5050838103825284818151815260200191508051906020019080838360005b8381101561033a578082015183820152602001610322565b50505050905090810190601f1680156103675780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a16000838152600660205260409020805460ff1916905561039561039a565b505050565b6000806103d960408051908101604052600381527f55524c00000000000000000000000000000000000000000000000000000000006020820152610883565b915030600160a060020a0316318211156104b3577fa5d25360fdd35cce2709086bc23d983d9b2d923e48e52508d12e63a44484019482600060405160208101929092526040808301919091526060808352604b908301527f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6560808301527f6173652061646420736f6d652045544820746f20636f76657220666f7220746860a08301527f652071756572792066656500000000000000000000000000000000000000000060c083015260e0909101905180910390a16101fd565b61057a603c6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604c81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d455448584254292e726573756c742e81526020017f58455448585842542e632e3000000000000000000000000000000000000000008152506202bf20610a9e565b60008181526006602052604090819020805460ff191660011790559091507fa5d25360fdd35cce2709086bc23d983d9b2d923e48e52508d12e63a444840194908390839051602081019290925260408083019190915260608083526035908301527f4f7261636c697a65207175657279207761732073656e742c207374616e64696e60808301527f6720627920666f722074686520616e737765722e2e000000000000000000000060a083015260c0909101905180910390a15050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106cd5780601f106106a2576101008083540402835291602001916106cd565b820191906000526020600020905b8154815290600101906020018083116106b057829003601f168201915b505050505081565b60008054600160a060020a0316158061070057506000546106fe90600160a060020a0316610e32565b155b156107115761070f6000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561075a57600080fd5b6102c65a03f1151561076b57600080fd5b5050506040518051600154600160a060020a03908116911614905061081b5760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156107d357600080fd5b6102c65a03f115156107e457600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a031663c281d19e6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561086357600080fd5b6102c65a03f1151561087457600080fd5b50505060405180519150505b90565b60008054600160a060020a031615806108ae57506000546108ac90600160a060020a0316610e32565b155b156108bf576108bd6000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561090857600080fd5b6102c65a03f1151561091957600080fd5b5050506040518051600154600160a060020a0390811691161490506109c95760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561098157600080fd5b6102c65a03f1151561099257600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a031663524f3889836000604051602001526040518263ffffffff1660e060020a0281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a33578082015183820152602001610a1b565b50505050905090810190601f168015610a605780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1515610a7e57600080fd5b6102c65a03f11515610a8f57600080fd5b50505060405180519392505050565b600080548190600160a060020a03161580610acb5750600054610ac990600160a060020a0316610e32565b155b15610adc57610ada6000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610b2557600080fd5b6102c65a03f11515610b3657600080fd5b5050506040518051600154600160a060020a039081169116149050610be65760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610b9e57600080fd5b6102c65a03f11515610baf57600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a0316632ef3accc86856000604051602001526040518363ffffffff1660e060020a0281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610c57578082015183820152602001610c3f565b50505050905090810190601f168015610c845780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1515610ca357600080fd5b6102c65a03f11515610cb457600080fd5b5050506040518051915050670de0b6b3a76400003a840201811115610cdc5760009150610e29565b600154600160a060020a031663c51be90f82888888886000604051602001526040518663ffffffff1660e060020a028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610d5a578082015183820152602001610d42565b50505050905090810190601f168015610d875780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610dbd578082015183820152602001610da5565b50505050905090810190601f168015610dea5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1515610e0b57600080fd5b6125ee5a03f11515610e1c57600080fd5b5050505060405180519250505b50949350505050565b3b90565b6000610e40610e46565b92915050565b600080610e66731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610e32565b1115610ee3576000805473ffffffffffffffffffffffffffffffffffffffff1916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed179055610edb60408051908101604052600b81527f6574685f6d61696e6e657400000000000000000000000000000000000000000060208201526111c5565b506001610880565b6000610f0273c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610e32565b1115610f77576000805473ffffffffffffffffffffffffffffffffffffffff191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1179055610edb60408051908101604052600c81527f6574685f726f707374656e33000000000000000000000000000000000000000060208201526111c5565b6000610f9673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610e32565b111561100b576000805473ffffffffffffffffffffffffffffffffffffffff191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e179055610edb60408051908101604052600981527f6574685f6b6f76616e000000000000000000000000000000000000000000000060208201526111c5565b600061102a73146500cfd35b22e4a392fe0adc06de1a1368ed48610e32565b111561109f576000805473ffffffffffffffffffffffffffffffffffffffff191673146500cfd35b22e4a392fe0adc06de1a1368ed48179055610edb60408051908101604052600b81527f6574685f72696e6b65627900000000000000000000000000000000000000000060208201526111c5565b60006110be736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610e32565b11156110ff57506000805473ffffffffffffffffffffffffffffffffffffffff1916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751790556001610880565b600061111e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610e32565b111561115f57506000805473ffffffffffffffffffffffffffffffffffffffff19167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1790556001610880565b600061117e7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610e32565b11156111bf57506000805473ffffffffffffffffffffffffffffffffffffffff19167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1790556001610880565b50600090565b60028180516101fd9291602001905b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061121557805160ff1916838001178555611242565b82800160010185558215611242579182015b82811115611242578251825591602001919060010190611227565b5061124e929150611252565b5090565b61088091905b8082111561124e5760008155600101611258565b600054600160a060020a03161580611296575060005461129490600160a060020a0316610e32565b155b156112a7576112a56000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156112f057600080fd5b6102c65a03f1151561130157600080fd5b5050506040518051600154600160a060020a0390811691161490506113b15760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561136957600080fd5b6102c65a03f1151561137a57600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a031663688dcfd78260405160e060020a63ffffffff84160281527fff000000000000000000000000000000000000000000000000000000000000009091166004820152602401600060405180830381600087803b151561141a57600080fd5b6102c65a03f1151561142b57600080fd5b50505050565b600054600160a060020a0316158061145b575060005461145990600160a060020a0316610e32565b155b1561146c5761146a6000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156114b557600080fd5b6102c65a03f115156114c657600080fd5b5050506040518051600154600160a060020a0390811691161490506115765760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561152e57600080fd5b6102c65a03f1151561153f57600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a031663ca6ad1e48260405160e060020a63ffffffff84160281526004810191909152602401600060405180830381600087803b151561141a57600080fd00a165627a7a723058205c82c96d476d6a09a445837892902089e491fbe98cb316ef4478c4e77d04fee80029a5d25360fdd35cce2709086bc23d983d9b2d923e48e52508d12e63a444840194",
  "deployedBytecode": "0x6060604052600436106100485763ffffffff60e060020a60003504166327dc297e811461004d57806338bbfa50146100a5578063a2e620451461013d578063e137ec2d14610145575b600080fd5b341561005857600080fd5b6100a3600480359060446024803590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506101cf95505050505050565b005b34156100b057600080fd5b6100a3600480359060446024803590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061020195505050505050565b6100a361039a565b341561015057600080fd5b610158610637565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561019457808201518382015260200161017c565b50505050905090810190601f1680156101c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fd828260006040518059106101e35750595b818152601f19601f83011681016020016040529050610201565b5050565b6102096106d5565b600160a060020a031633600160a060020a031614151561022857600080fd5b60008381526006602052604090205460ff16151561024557600080fd5b60058280516102589291602001906111d4565b507f0e1622293ecfe24e2c6a74cb531964b5133ac40879dc71c54feed200bf60cac360058483604051602081018390526060808252845460026101006001831615026000190190911604908201819052819060408201906080830190879080156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b5050838103825284818151815260200191508051906020019080838360005b8381101561033a578082015183820152602001610322565b50505050905090810190601f1680156103675780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a16000838152600660205260409020805460ff1916905561039561039a565b505050565b6000806103d960408051908101604052600381527f55524c00000000000000000000000000000000000000000000000000000000006020820152610883565b915030600160a060020a0316318211156104b3577fa5d25360fdd35cce2709086bc23d983d9b2d923e48e52508d12e63a44484019482600060405160208101929092526040808301919091526060808352604b908301527f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6560808301527f6173652061646420736f6d652045544820746f20636f76657220666f7220746860a08301527f652071756572792066656500000000000000000000000000000000000000000060c083015260e0909101905180910390a16101fd565b61057a603c6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604c81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d455448584254292e726573756c742e81526020017f58455448585842542e632e3000000000000000000000000000000000000000008152506202bf20610a9e565b60008181526006602052604090819020805460ff191660011790559091507fa5d25360fdd35cce2709086bc23d983d9b2d923e48e52508d12e63a444840194908390839051602081019290925260408083019190915260608083526035908301527f4f7261636c697a65207175657279207761732073656e742c207374616e64696e60808301527f6720627920666f722074686520616e737765722e2e000000000000000000000060a083015260c0909101905180910390a15050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106cd5780601f106106a2576101008083540402835291602001916106cd565b820191906000526020600020905b8154815290600101906020018083116106b057829003601f168201915b505050505081565b60008054600160a060020a0316158061070057506000546106fe90600160a060020a0316610e32565b155b156107115761070f6000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561075a57600080fd5b6102c65a03f1151561076b57600080fd5b5050506040518051600154600160a060020a03908116911614905061081b5760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156107d357600080fd5b6102c65a03f115156107e457600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a031663c281d19e6000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561086357600080fd5b6102c65a03f1151561087457600080fd5b50505060405180519150505b90565b60008054600160a060020a031615806108ae57506000546108ac90600160a060020a0316610e32565b155b156108bf576108bd6000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561090857600080fd5b6102c65a03f1151561091957600080fd5b5050506040518051600154600160a060020a0390811691161490506109c95760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561098157600080fd5b6102c65a03f1151561099257600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a031663524f3889836000604051602001526040518263ffffffff1660e060020a0281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a33578082015183820152602001610a1b565b50505050905090810190601f168015610a605780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1515610a7e57600080fd5b6102c65a03f11515610a8f57600080fd5b50505060405180519392505050565b600080548190600160a060020a03161580610acb5750600054610ac990600160a060020a0316610e32565b155b15610adc57610ada6000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610b2557600080fd5b6102c65a03f11515610b3657600080fd5b5050506040518051600154600160a060020a039081169116149050610be65760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610b9e57600080fd5b6102c65a03f11515610baf57600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a0316632ef3accc86856000604051602001526040518363ffffffff1660e060020a0281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610c57578082015183820152602001610c3f565b50505050905090810190601f168015610c845780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1515610ca357600080fd5b6102c65a03f11515610cb457600080fd5b5050506040518051915050670de0b6b3a76400003a840201811115610cdc5760009150610e29565b600154600160a060020a031663c51be90f82888888886000604051602001526040518663ffffffff1660e060020a028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610d5a578082015183820152602001610d42565b50505050905090810190601f168015610d875780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610dbd578082015183820152602001610da5565b50505050905090810190601f168015610dea5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1515610e0b57600080fd5b6125ee5a03f11515610e1c57600080fd5b5050505060405180519250505b50949350505050565b3b90565b6000610e40610e46565b92915050565b600080610e66731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610e32565b1115610ee3576000805473ffffffffffffffffffffffffffffffffffffffff1916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed179055610edb60408051908101604052600b81527f6574685f6d61696e6e657400000000000000000000000000000000000000000060208201526111c5565b506001610880565b6000610f0273c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610e32565b1115610f77576000805473ffffffffffffffffffffffffffffffffffffffff191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1179055610edb60408051908101604052600c81527f6574685f726f707374656e33000000000000000000000000000000000000000060208201526111c5565b6000610f9673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610e32565b111561100b576000805473ffffffffffffffffffffffffffffffffffffffff191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e179055610edb60408051908101604052600981527f6574685f6b6f76616e000000000000000000000000000000000000000000000060208201526111c5565b600061102a73146500cfd35b22e4a392fe0adc06de1a1368ed48610e32565b111561109f576000805473ffffffffffffffffffffffffffffffffffffffff191673146500cfd35b22e4a392fe0adc06de1a1368ed48179055610edb60408051908101604052600b81527f6574685f72696e6b65627900000000000000000000000000000000000000000060208201526111c5565b60006110be736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610e32565b11156110ff57506000805473ffffffffffffffffffffffffffffffffffffffff1916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751790556001610880565b600061111e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610e32565b111561115f57506000805473ffffffffffffffffffffffffffffffffffffffff19167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1790556001610880565b600061117e7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610e32565b11156111bf57506000805473ffffffffffffffffffffffffffffffffffffffff19167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1790556001610880565b50600090565b60028180516101fd9291602001905b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061121557805160ff1916838001178555611242565b82800160010185558215611242579182015b82811115611242578251825591602001919060010190611227565b5061124e929150611252565b5090565b61088091905b8082111561124e5760008155600101611258565b600054600160a060020a03161580611296575060005461129490600160a060020a0316610e32565b155b156112a7576112a56000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156112f057600080fd5b6102c65a03f1151561130157600080fd5b5050506040518051600154600160a060020a0390811691161490506113b15760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561136957600080fd5b6102c65a03f1151561137a57600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a031663688dcfd78260405160e060020a63ffffffff84160281527fff000000000000000000000000000000000000000000000000000000000000009091166004820152602401600060405180830381600087803b151561141a57600080fd5b6102c65a03f1151561142b57600080fd5b50505050565b600054600160a060020a0316158061145b575060005461145990600160a060020a0316610e32565b155b1561146c5761146a6000610e36565b505b60008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156114b557600080fd5b6102c65a03f115156114c657600080fd5b5050506040518051600154600160a060020a0390811691161490506115765760008054600160a060020a0316906338cc483190604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561152e57600080fd5b6102c65a03f1151561153f57600080fd5b50505060405180516001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055505b600154600160a060020a031663ca6ad1e48260405160e060020a63ffffffff84160281526004810191909152602401600060405180830381600087803b151561141a57600080fd00a165627a7a723058205c82c96d476d6a09a445837892902089e491fbe98cb316ef4478c4e77d04fee80029",
  "sourceMap": "203:1621:0:-;;;564:3;:71;;-1:-1:-1;;;;;;564:71:0;592:42;564:71;;;708:58;726:39;708:17;;;;;;:58;:::i;:::-;824:36;851:8;824:26;;;;;;:36;:::i;:::-;871:8;:6;;;;;;:8;:::i;:::-;203:1621;;34196:116:2;11533:3;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;;;;;;:25;:::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;;;;;;:35;:::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;;;;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;34275:8;;-1:-1:-1;;;;;34275:8:2;:21;34297:6;34275:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;34275:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34196:116;:::o;34318:134::-;11533:3;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;;;;;;:25;:::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;;;;;;:35;:::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;;;;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;34408:8;;-1:-1:-1;;;;;34408:8:2;:26;34435:8;34408:36;;;;;;;;;;;;;;;;;;-1:-1:-1;34408:36:2;;;;;;;;;;;;;;;;;1209:613:0;1252:14;1487:15;1269:24;;;;;;;;;;;;;;;;;:17;;;;;;:24;:::i;:::-;1252:41;;1319:4;-1:-1:-1;;;;;1319:12:0;;1307:9;:24;1303:513;;;-1:-1:-1;;;;;;;;;;;1443:9:0;1454:1;1347:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:513;;;1505:116;1520:2;1505:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:10;1505:14;;;;;;:116;:::i;:::-;1674:17;;;;:8;:17;;;;;;;:24;;-1:-1:-1;;1674:24:0;1694:4;1674:24;;;1487:134;;-1:-1:-1;;;;;;;;;;;;1712:93:0;1786:9;;1487:134;;1712:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:513;1209:613;;:::o;34622:154:2:-;34740:11;;34716:53::o;11862:186::-;11925:4;11946:21;:19;;;;;;:21;:::i;:::-;11939:28;11862:186;-1:-1:-1;;11862:186:2:o;14121:136::-;14197:4;11533:3;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;;;;;;:25;:::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;;;;;;:35;:::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;;;;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;14220:8;;-1:-1:-1;;;;;14220:8:2;:17;14238:10;14220:8;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14121:136:2;-1:-1:-1;;;14121:136:2:o;15090:384::-;15206:10;11533:3;;15206:10;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;;;;;;:25;:::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;;;;;;:35;:::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;;;;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;15241:8;;-1:-1:-1;;;;;15241:8:2;:17;15259:10;15271:8;15241;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;;15303:7:2;15313:11;:20;;15303:30;15295:38;;15291:52;;;15342:1;;-1:-1:-1;15335:8:2;;15291:52;15388:8;;-1:-1:-1;;;;;15388:8:2;:27;15422:5;15429:9;15440:10;15452:3;15457:8;15388;:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;;11742:1:2;15090:384;;;;;;;:::o;12054:1783::-;12102:4;;12122:55;12134:42;12122:11;;;;;;:55;:::i;:::-;:57;12118:249;;;12205:3;:71;;-1:-1:-1;;;;;;12205:71:2;12233:42;12205:71;;;12291:38;;;;;;;;;;;;;;;;;:23;;;;;;:38;:::i;:::-;-1:-1:-1;12351:4:2;12344:11;;12118:249;12437:1;12381:55;12393:42;12381:11;;;;;;:55;:::i;:::-;:57;12377:258;;;12472:3;:71;;-1:-1:-1;;;;;;12472:71:2;12500:42;12472:71;;;12558:39;;;;;;;;;;;;;;;;;:23;;;;;;:39;:::i;12377:258::-;12705:1;12649:55;12661:42;12649:11;;;;;;:55;:::i;:::-;:57;12645:253;;;12738:3;:71;;-1:-1:-1;;;;;;12738:71:2;12766:42;12738:71;;;12824:36;;;;;;;;;;;;;;;;;:23;;;;;;:36;:::i;12645:253::-;12968:1;12912:55;12924:42;12912:11;;;;;;:55;:::i;:::-;:57;12908:257;;;13003:3;:71;;-1:-1:-1;;;;;;13003:71:2;13031:42;13003:71;;;13089:38;;;;;;;;;;;;;;;;;:23;;;;;;:38;:::i;12908:257::-;13235:1;13179:55;13191:42;13179:11;;;;;;:55;:::i;:::-;:57;13175:204;;;-1:-1:-1;13270:3:2;:71;;-1:-1:-1;;;;;;13270:71:2;13298:42;13270:71;;;;13356:11;;13175:204;13449:1;13393:55;13405:42;13393:11;;;;;;:55;:::i;:::-;:57;13389:203;;;-1:-1:-1;13483:3:2;:71;;-1:-1:-1;;;;;;13483:71:2;13511:42;13483:71;;;;13569:11;;13389:203;13662:1;13606:55;13618:42;13606:11;;;;;;:55;:::i;:::-;:57;13602:205;;;-1:-1:-1;13698:3:2;:71;;-1:-1:-1;;;;;;13698:71:2;13726:42;13698:71;;;;13784:11;;13602:205;-1:-1:-1;13824:5:2;12054:1783;;:::o;40254:120::-;40329:21;40353:13;;40329:37;;;;;;;203:1621:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;203:1621:0;;;-1:-1:-1;203:1621:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "203:1621:0:-;;;;;;;;;-1:-1:-1;;;203:1621:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;13845:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13845:113:2;;-1:-1:-1;13845:113:2;;-1:-1:-1;;;;;;13845:113:2;;;892:311:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:311:0;;-1:-1:-1;892:311:0;;-1:-1:-1;;;;;;892:311:0;1209:613;;;;254:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13845:113:2;13912:38;13923:4;13929:6;13947:1;13937:12;;;;;;;;;;;;;-1:-1:-1;;13937:12:2;;;;;;;;;;;;13912:10;:38::i;:::-;13845:113;;:::o;892:311:0:-;989:20;:18;:20::i;:::-;-1:-1:-1;;;;;975:34:0;:10;-1:-1:-1;;;;;975:34:0;;;971:48;;;1011:8;;;971:48;1034:14;;;;:8;:14;;;;;;;;1033:15;1029:29;;;1050:8;;;1029:29;1068:11;1082:6;;1068:20;;;;;;;;:::i;:::-;;1098:46;1119:11;1132:4;1138:5;1098:46;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1098:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1172:5:0;1155:14;;;:8;:14;;;;;:22;;-1:-1:-1;;1155:22:0;;;1188:8;:6;:8::i;:::-;892:311;;;:::o;1209:613::-;1252:14;1487:15;1269:24;;;;;;;;;;;;;;;;;:17;:24::i;:::-;1252:41;;1319:4;-1:-1:-1;;;;;1319:12:0;;1307:9;:24;1303:513;;;1347:109;1443:9;1454:1;1347:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:513;;;1505:116;1520:2;1505:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:10;1505:14;:116::i;:::-;1674:17;;;;:8;:17;;;;;;;:24;;-1:-1:-1;;1674:24:0;1694:4;1674:24;;;1487:134;;-1:-1:-1;1712:93:0;;1786:9;;1487:134;;1712:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:613;;:::o;254:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;34076:114:2:-;34136:7;11533:3;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;:25::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;:35::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11660:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11712:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;34162:8;;-1:-1:-1;;;;;34162:8:2;:18;:8;:20;;;;;;;;;;-1:-1:-1;;;34162:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11742:1:2;34076:114;:::o;14121:136::-;14197:4;11533:3;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;:25::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;:35::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11660:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11712:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;14220:8;;-1:-1:-1;;;;;14220:8:2;:17;14238:10;14220:8;:29;;;;;;;;;;-1:-1:-1;;;14220:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14121:136:2;-1:-1:-1;;;14121:136:2:o;15090:384::-;15206:10;11533:3;;15206:10;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;:25::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;:35::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11660:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11712:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;15241:8;;-1:-1:-1;;;;;15241:8:2;:17;15259:10;15271:8;15241;:39;;;;;;;;;;-1:-1:-1;;;15241:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;;15303:7:2;15313:11;:20;;15303:30;15295:38;;15291:52;;;15342:1;;-1:-1:-1;15335:8:2;;15291:52;15388:8;;-1:-1:-1;;;;;15388:8:2;:27;15422:5;15429:9;15440:10;15452:3;15457:8;15388;:78;;;;;;;;;;-1:-1:-1;;;15388:78:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;;11742:1:2;15090:384;;;;;;;:::o;34622:154::-;34740:11;;34716:53::o;11862:186::-;11925:4;11946:21;:19;:21::i;:::-;11939:28;11862:186;-1:-1:-1;;11862:186:2:o;12054:1783::-;12102:4;12178:1;12122:55;12134:42;12122:11;:55::i;:::-;:57;12118:249;;;12205:3;:71;;-1:-1:-1;;12205:71:2;12233:42;12205:71;;;12291:38;;;;;;;;;;;;;;;;;:23;:38::i;:::-;-1:-1:-1;12351:4:2;12344:11;;12118:249;12437:1;12381:55;12393:42;12381:11;:55::i;:::-;:57;12377:258;;;12472:3;:71;;-1:-1:-1;;12472:71:2;12500:42;12472:71;;;12558:39;;;;;;;;;;;;;;;;;:23;:39::i;12377:258::-;12705:1;12649:55;12661:42;12649:11;:55::i;:::-;:57;12645:253;;;12738:3;:71;;-1:-1:-1;;12738:71:2;12766:42;12738:71;;;12824:36;;;;;;;;;;;;;;;;;:23;:36::i;12645:253::-;12968:1;12912:55;12924:42;12912:11;:55::i;:::-;:57;12908:257;;;13003:3;:71;;-1:-1:-1;;13003:71:2;13031:42;13003:71;;;13089:38;;;;;;;;;;;;;;;;;:23;:38::i;12908:257::-;13235:1;13179:55;13191:42;13179:11;:55::i;:::-;:57;13175:204;;;-1:-1:-1;13270:3:2;:71;;-1:-1:-1;;13270:71:2;13298:42;13270:71;;;;13356:11;;13175:204;13449:1;13393:55;13405:42;13393:11;:55::i;:::-;:57;13389:203;;;-1:-1:-1;13483:3:2;:71;;-1:-1:-1;;13483:71:2;13511:42;13483:71;;;;13569:11;;13389:203;13662:1;13606:55;13618:42;13606:11;:55::i;:::-;:57;13602:205;;;-1:-1:-1;13698:3:2;:71;;-1:-1:-1;;13698:71:2;13726:42;13698:71;;;;13784:11;;13602:205;-1:-1:-1;13824:5:2;12054:1783;:::o;40254:120::-;40329:21;40353:13;;40329:37;;;;;;;203:1621:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;203:1621:0;;;-1:-1:-1;203:1621:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;34196:116:2;11533:3;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;:25::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;:35::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11660:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11712:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;34275:8;;-1:-1:-1;;;;;34275:8:2;:21;34297:6;34275:29;;-1:-1:-1;;;34275:29:2;;;;;;;;;;;;;;;;-1:-1:-1;34275:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34196:116;:::o;34318:134::-;11533:3;;-1:-1:-1;;;;;11533:3:2;11525:15;;11524:49;;-1:-1:-1;11564:3:2;;11544:25;;-1:-1:-1;;;;;11564:3:2;11544:11;:25::i;:::-;:28;11524:49;11521:102;;;11588:35;11245:1;11588:19;:35::i;:::-;;11521:102;11660:3;;;-1:-1:-1;;;;;11660:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11660:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11647:8;;-1:-1:-1;;;;;11647:8:2;;;11639:37;;;;-1:-1:-1;11636:93:2;;11712:3;;;-1:-1:-1;;;;;11712:3:2;;:14;;:16;;;;;;;;;;-1:-1:-1;;;11712:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11691:8;:38;;-1:-1:-1;;11691:38:2;-1:-1:-1;;;;;11691:38:2;;;;;;;;;;-1:-1:-1;11636:93:2;34408:8;;-1:-1:-1;;;;;34408:8:2;:26;34435:8;34408:36;;-1:-1:-1;;;34408:36:2;;;;;;;;;;;;;;;-1:-1:-1;34408:36:2;;;;;;;;;;;;;;;;",
  "source": "/*\n   Kraken-based ETH/XBT price ticker\n\n   This contract keeps in storage an updated ETH/XBT price,\n   which is updated every ~60 seconds.\n*/\npragma solidity ^0.4.18;\n\nimport \"./oraclizeAPI_0.5.sol\";\n\n\ncontract KrakenPriceTicker is usingOraclize {\n\n    string public priceETHXBT;\n    mapping(bytes32 => bool) validIds;\n\n    uint constant _gasLimit = 180000 wei;\n\n    event NewOraclizeQuery(string description, uint fee, bytes32 id);\n    event NewKrakenPriceTicker(string price, bytes32 id, bytes proof);\n\n    function KrakenPriceTicker() public payable {\n        OAR = OraclizeAddrResolverI(0xBb029d89EFb9E7EDA9C8BAEb164cfBd021A6aa77);\n        \n        // The proof will be received as an IPFS hash\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n\n        // set gas price for Oraclize callback\n        oraclize_setCustomGasPrice(1000 wei);\n\n        update();\n    }\n\n    function __callback(bytes32 myid, string result, bytes proof) public {\n        if (msg.sender != oraclize_cbAddress()) revert();\n        if (!validIds[myid]) revert();\n        priceETHXBT = result;\n        NewKrakenPriceTicker(priceETHXBT, myid, proof);\n\n        validIds[myid] = false;\n\n        update();\n    }\n\n    function update() public payable {\n        uint feeNeeded = oraclize_getPrice(\"URL\");\n        if (feeNeeded > this.balance) {\n            NewOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\", feeNeeded, 0);\n        } else {\n            bytes32 queryId = oraclize_query(60, \"URL\", \"json(https://api.kraken.com/0/public/Ticker?pair=ETHXBT).result.XETHXXBT.c.0\", _gasLimit);\n            // add query ID to mapping\n            validIds[queryId] = true;\n            NewOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\", feeNeeded, queryId);\n        }\n    }\n}\n",
  "sourcePath": "/home/aznagy/work/oraclize/tutorial-oraclize/contracts/KrakenPriceTicker.sol",
  "ast": {
    "absolutePath": "/home/aznagy/work/oraclize/tutorial-oraclize/contracts/KrakenPriceTicker.sol",
    "exportedSymbols": {
      "KrakenPriceTicker": [
        143
      ]
    },
    "id": 144,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "143:24:0"
      },
      {
        "absolutePath": "/home/aznagy/work/oraclize/tutorial-oraclize/contracts/oraclizeAPI_0.5.sol",
        "file": "./oraclizeAPI_0.5.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 144,
        "sourceUnit": 6245,
        "src": "169:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6244,
              "src": "233:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6244",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "233:13:0"
          }
        ],
        "contractDependencies": [
          6244
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 143,
        "linearizedBaseContracts": [
          143,
          6244
        ],
        "name": "KrakenPriceTicker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "priceETHXBT",
            "nodeType": "VariableDeclaration",
            "scope": 143,
            "src": "254:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "254:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "validIds",
            "nodeType": "VariableDeclaration",
            "scope": 143,
            "src": "285:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "293:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "285:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 8,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "304:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 13,
            "name": "_gasLimit",
            "nodeType": "VariableDeclaration",
            "scope": 143,
            "src": "325:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "325:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313830303030",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "351:10:0",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_180000_by_1",
                "typeString": "int_const 180000"
              },
              "value": "180000"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 21,
            "name": "NewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "391:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "411:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "421:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "390:42:0"
            },
            "src": "368:65:0"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "NewKrakenPriceTicker",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "465:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "479:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "491:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "464:39:0"
            },
            "src": "438:66:0"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "554:332:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 944,
                      "src": "564:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$354",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307842623032396438394546623945374544413943384241456231363463664264303231413661613737",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "592:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xBb029d89EFb9E7EDA9C8BAEb164cfBd021A6aa77"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "570:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$354_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "570:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$354",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "564:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$354",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "564:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "726:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 927,
                          "src": "748:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "726:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 38,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4230,
                      "src": "708:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "708:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "851:8:0",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44,
                      "name": "oraclize_setCustomGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4243,
                      "src": "824:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "824:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "871:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "871:8:0"
                }
              ]
            },
            "id": 52,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "KrakenPriceTicker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "536:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:0:0"
            },
            "scope": 143,
            "src": "510:376:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "961:242:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6256,
                        "src": "975:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "975:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4217,
                        "src": "989:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "989:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "975:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 69,
                  "nodeType": "IfStatement",
                  "src": "971:48:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6260,
                        "src": "1011:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1011:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 68,
                    "nodeType": "ExpressionStatement",
                    "src": "1011:8:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1033:15:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1034:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 72,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "myid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1043:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1034:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 77,
                  "nodeType": "IfStatement",
                  "src": "1029:29:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6260,
                        "src": "1050:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1050:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76,
                    "nodeType": "ExpressionStatement",
                    "src": "1050:8:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "priceETHXBT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1068:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1082:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1068:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "priceETHXBT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1119:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "myid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1132:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1138:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 82,
                      "name": "NewKrakenPriceTicker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1098:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,bytes32,bytes memory)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1098:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1155:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 90,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "myid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1164:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1155:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1172:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1155:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 94,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "1188:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:8:0"
                }
              ]
            },
            "id": 98,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "912:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "926:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "941:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "911:42:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:0:0"
            },
            "scope": 143,
            "src": "892:311:0",
            "stateMutability": "nonpayable",
            "superFunction": 1176,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1242:580:0",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "name": "feeNeeded",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1252:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1252:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        }
                      ],
                      "id": 103,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1191,
                        1209
                      ],
                      "referencedDeclaration": 1191,
                      "src": "1269:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) returns (uint256)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1269:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1252:41:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "feeNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "1307:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6277,
                        "src": "1319:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KrakenPriceTicker_$143",
                          "typeString": "contract KrakenPriceTicker"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1319:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1307:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 139,
                    "nodeType": "Block",
                    "src": "1473:343:0",
                    "statements": [
                      {
                        "assignments": [
                          119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 119,
                            "name": "queryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 142,
                            "src": "1487:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 118,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1487:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 126,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3630",
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1520:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1524:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075626c69632f5469636b65723f706169723d455448584254292e726573756c742e58455448585842542e632e30",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1531:78:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b65cdd234f011c70bb686516ea49d52cd884ea103d338961ed58ccbd1da32650",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHXBT).result.XETHXXBT.c.0\""
                              },
                              "value": "json(https://api.kraken.com/0/public/Ticker?pair=ETHXBT).result.XETHXXBT.c.0"
                            },
                            {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "_gasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1611:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b65cdd234f011c70bb686516ea49d52cd884ea103d338961ed58ccbd1da32650",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHXBT).result.XETHXXBT.c.0\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 120,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1249,
                              1291,
                              1337,
                              1381,
                              1424,
                              1469,
                              1518,
                              1565,
                              1612,
                              1661,
                              1714,
                              1765,
                              1802,
                              1842,
                              1885,
                              1925,
                              1970,
                              2018,
                              2069,
                              2117,
                              2170,
                              2226,
                              2285,
                              2341,
                              2402,
                              2466,
                              2533,
                              2597,
                              2666,
                              2738,
                              2813,
                              2885,
                              2932,
                              2981,
                              3034,
                              3085,
                              3122,
                              3162,
                              3205,
                              3245,
                              3290,
                              3338,
                              3389,
                              3437,
                              3490,
                              3546,
                              3605,
                              3661,
                              3722,
                              3786,
                              3853,
                              3917,
                              3986,
                              4058,
                              4133,
                              4205
                            ],
                            "referencedDeclaration": 1337,
                            "src": "1505:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1505:116:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1487:134:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1674:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 129,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 128,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "1683:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1674:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1694:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1674:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "1674:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1729:55:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            },
                            {
                              "argumentTypes": null,
                              "id": 135,
                              "name": "feeNeeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "1786:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "1797:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 133,
                            "name": "NewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "1712:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (string memory,uint256,bytes32)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1712:93:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "1712:93:0"
                      }
                    ]
                  },
                  "id": 140,
                  "nodeType": "IfStatement",
                  "src": "1303:513:0",
                  "trueBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1333:134:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1364:77:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            },
                            {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "feeNeeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "1443:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1454:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 111,
                            "name": "NewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "1347:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (string memory,uint256,bytes32)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1347:109:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1347:109:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 142,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:0:0"
            },
            "scope": 143,
            "src": "1209:613:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 144,
        "src": "203:1621:0"
      }
    ],
    "src": "143:1682:0"
  },
  "legacyAST": {
    "absolutePath": "/home/aznagy/work/oraclize/tutorial-oraclize/contracts/KrakenPriceTicker.sol",
    "exportedSymbols": {
      "KrakenPriceTicker": [
        143
      ]
    },
    "id": 144,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "143:24:0"
      },
      {
        "absolutePath": "/home/aznagy/work/oraclize/tutorial-oraclize/contracts/oraclizeAPI_0.5.sol",
        "file": "./oraclizeAPI_0.5.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 144,
        "sourceUnit": 6245,
        "src": "169:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6244,
              "src": "233:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6244",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "233:13:0"
          }
        ],
        "contractDependencies": [
          6244
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 143,
        "linearizedBaseContracts": [
          143,
          6244
        ],
        "name": "KrakenPriceTicker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "priceETHXBT",
            "nodeType": "VariableDeclaration",
            "scope": 143,
            "src": "254:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "254:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "validIds",
            "nodeType": "VariableDeclaration",
            "scope": 143,
            "src": "285:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "293:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "285:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 8,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "304:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 13,
            "name": "_gasLimit",
            "nodeType": "VariableDeclaration",
            "scope": 143,
            "src": "325:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "325:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313830303030",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "351:10:0",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_180000_by_1",
                "typeString": "int_const 180000"
              },
              "value": "180000"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 21,
            "name": "NewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "391:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "411:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "421:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "390:42:0"
            },
            "src": "368:65:0"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "NewKrakenPriceTicker",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "465:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "479:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "491:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "464:39:0"
            },
            "src": "438:66:0"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "554:332:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 944,
                      "src": "564:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$354",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307842623032396438394546623945374544413943384241456231363463664264303231413661613737",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "592:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xBb029d89EFb9E7EDA9C8BAEb164cfBd021A6aa77"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "570:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$354_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "570:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$354",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "564:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$354",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "564:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "726:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 927,
                          "src": "748:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "726:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 38,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4230,
                      "src": "708:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "708:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "851:8:0",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 44,
                      "name": "oraclize_setCustomGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4243,
                      "src": "824:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "824:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "871:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "871:8:0"
                }
              ]
            },
            "id": 52,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "KrakenPriceTicker",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "536:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:0:0"
            },
            "scope": 143,
            "src": "510:376:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "961:242:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6256,
                        "src": "975:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "975:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4217,
                        "src": "989:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "989:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "975:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 69,
                  "nodeType": "IfStatement",
                  "src": "971:48:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6260,
                        "src": "1011:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1011:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 68,
                    "nodeType": "ExpressionStatement",
                    "src": "1011:8:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1033:15:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1034:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 72,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "myid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1043:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1034:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 77,
                  "nodeType": "IfStatement",
                  "src": "1029:29:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6260,
                        "src": "1050:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1050:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 76,
                    "nodeType": "ExpressionStatement",
                    "src": "1050:8:0"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "priceETHXBT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1068:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1082:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1068:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "priceETHXBT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1119:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "myid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1132:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1138:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 82,
                      "name": "NewKrakenPriceTicker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1098:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,bytes32,bytes memory)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1098:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1155:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 90,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "myid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1164:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1155:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1172:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1155:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 94,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "1188:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:8:0"
                }
              ]
            },
            "id": 98,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "912:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "926:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "941:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "911:42:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:0:0"
            },
            "scope": 143,
            "src": "892:311:0",
            "stateMutability": "nonpayable",
            "superFunction": 1176,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1242:580:0",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "name": "feeNeeded",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "1252:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1252:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        }
                      ],
                      "id": 103,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1191,
                        1209
                      ],
                      "referencedDeclaration": 1191,
                      "src": "1269:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) returns (uint256)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1269:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1252:41:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 107,
                      "name": "feeNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "1307:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6277,
                        "src": "1319:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KrakenPriceTicker_$143",
                          "typeString": "contract KrakenPriceTicker"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1319:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1307:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 139,
                    "nodeType": "Block",
                    "src": "1473:343:0",
                    "statements": [
                      {
                        "assignments": [
                          119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 119,
                            "name": "queryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 142,
                            "src": "1487:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 118,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1487:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 126,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3630",
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1520:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1524:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075626c69632f5469636b65723f706169723d455448584254292e726573756c742e58455448585842542e632e30",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1531:78:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b65cdd234f011c70bb686516ea49d52cd884ea103d338961ed58ccbd1da32650",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHXBT).result.XETHXXBT.c.0\""
                              },
                              "value": "json(https://api.kraken.com/0/public/Ticker?pair=ETHXBT).result.XETHXXBT.c.0"
                            },
                            {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "_gasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1611:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b65cdd234f011c70bb686516ea49d52cd884ea103d338961ed58ccbd1da32650",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHXBT).result.XETHXXBT.c.0\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 120,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1249,
                              1291,
                              1337,
                              1381,
                              1424,
                              1469,
                              1518,
                              1565,
                              1612,
                              1661,
                              1714,
                              1765,
                              1802,
                              1842,
                              1885,
                              1925,
                              1970,
                              2018,
                              2069,
                              2117,
                              2170,
                              2226,
                              2285,
                              2341,
                              2402,
                              2466,
                              2533,
                              2597,
                              2666,
                              2738,
                              2813,
                              2885,
                              2932,
                              2981,
                              3034,
                              3085,
                              3122,
                              3162,
                              3205,
                              3245,
                              3290,
                              3338,
                              3389,
                              3437,
                              3490,
                              3546,
                              3605,
                              3661,
                              3722,
                              3786,
                              3853,
                              3917,
                              3986,
                              4058,
                              4133,
                              4205
                            ],
                            "referencedDeclaration": 1337,
                            "src": "1505:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1505:116:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1487:134:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "validIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1674:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 129,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 128,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "1683:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1674:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1694:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1674:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "1674:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1729:55:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            },
                            {
                              "argumentTypes": null,
                              "id": 135,
                              "name": "feeNeeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "1786:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 119,
                              "src": "1797:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 133,
                            "name": "NewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "1712:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (string memory,uint256,bytes32)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1712:93:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "1712:93:0"
                      }
                    ]
                  },
                  "id": 140,
                  "nodeType": "IfStatement",
                  "src": "1303:513:0",
                  "trueBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1333:134:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1364:77:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            },
                            {
                              "argumentTypes": null,
                              "id": 113,
                              "name": "feeNeeded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "1443:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1454:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 111,
                            "name": "NewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "1347:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (string memory,uint256,bytes32)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1347:109:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1347:109:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 142,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:0:0"
            },
            "scope": 143,
            "src": "1209:613:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 144,
        "src": "203:1621:0"
      }
    ],
    "src": "143:1682:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "401697": {
      "events": {},
      "links": {},
      "address": "0x2ed9ad54d32d0936f265b65ce2c84c80765bbc47",
      "transactionHash": "0x3129f4f807b63ce124df0405bedd404fbe5e0402fb10862d6a05f0b8f93f7853"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-15T19:50:45.788Z"
}